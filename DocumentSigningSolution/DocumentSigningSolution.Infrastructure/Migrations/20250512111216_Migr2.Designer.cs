// <auto-generated />
using System;
using DocumentSigningSolution.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentSigningSolution.Infrastructure.Migrations
{
    [DbContext(typeof(DocumentSigningSolutionDbContext))]
    [Migration("20250512111216_Migr2")]
    partial class Migr2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocumentSigningSolution.Domain.DocumentAggregate.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.HasIndex("TemplateId");

                    b.HasIndex("Name", "Path")
                        .IsUnique();

                    b.ToTable("Documents", (string)null);
                });

            modelBuilder.Entity("DocumentSigningSolution.Domain.FolderAggregate.Folder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("Folders", (string)null);
                });

            modelBuilder.Entity("DocumentSigningSolution.Domain.TemplateAggregate.Template", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Version")
                        .IsUnique();

                    b.ToTable("Templates", (string)null);
                });

            modelBuilder.Entity("DocumentSigningSolution.Domain.DocumentAggregate.Document", b =>
                {
                    b.HasOne("DocumentSigningSolution.Domain.FolderAggregate.Folder", "Folder")
                        .WithMany("Documents")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DocumentSigningSolution.Domain.TemplateAggregate.Template", "Template")
                        .WithMany("Documents")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Folder");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("DocumentSigningSolution.Domain.FolderAggregate.Folder", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("DocumentSigningSolution.Domain.TemplateAggregate.Template", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
